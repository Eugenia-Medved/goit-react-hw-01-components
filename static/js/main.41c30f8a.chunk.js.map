{"version":3,"sources":["components/UsersProfile/UserProfile.module.css","components/TransactionHistory/Transactions.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendCard.module.css","components/FriendList/FriendsList.module.css","components/Container/Container.module.css","components/Container/Container.js","components/UsersProfile/User.js","components/Statistics/Statistical-data.js","components/FriendList/FriendCard.js","components/FriendList/FriendList.js","components/TransactionHistory/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Container","children","className","s","container","UsersProfile","option","name","tag","location","avatar","stats","profile","description","src","alt","item","label","quantity","followers","views","likes","Statistics","title","statistics","list","map","stat","percentage","id","FriendCard","isOnline","online","offline","width","FriendList","friends","friend","TransactionHistory","items","tTitle","tString","tItem","type","amount","currency","App","User","Users","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,QAAU,6BAA6B,YAAc,iCAAiC,OAAS,4BAA4B,KAAO,0BAA0B,IAAM,yBAAyB,SAAW,8BAA8B,MAAQ,2BAA2B,KAAO,0BAA0B,MAAQ,2BAA2B,SAAW,gC,gBCAxWD,EAAOC,QAAU,CAAC,OAAS,6BAA6B,MAAQ,4BAA4B,QAAU,gC,gBCAtGD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,0BAA0B,WAAa,iC,iBCA/MD,EAAOC,QAAU,CAAC,OAAS,2BAA2B,OAAS,oDAAoD,QAAU,qDAAqD,OAAS,2BAA2B,KAAO,2B,iBCA7ND,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,4B,iBCA1DD,EAAOC,QAAU,CAAC,UAAY,+B,6tGCKfC,MAJf,YAAkC,IAAbC,EAAY,EAAZA,SACnB,OAAO,qBAAKC,UAAWC,IAAEC,UAAlB,SAA8BH,K,gBC2CxBI,MA3Cf,YAAmC,IAAXC,EAAU,EAAVA,OACdC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,SAAUC,EAAkBJ,EAAlBI,OAAQC,EAAUL,EAAVK,MACrC,OACE,sBAAKT,UAAWC,IAAES,QAAlB,UACE,sBAAKV,UAAWC,IAAEU,YAAlB,UACE,qBAAKC,IAAKJ,EAAQK,IAAKR,EAAML,UAAWC,IAAEO,SAC1C,mBAAGR,UAAWC,IAAEI,KAAhB,SAAuBA,IACvB,oBAAGL,UAAWC,IAAEK,IAAhB,cAAuBA,KACvB,mBAAGN,UAAWC,IAAEM,SAAhB,SAA2BA,OAG7B,qBAAIP,UAAWC,IAAEQ,MAAjB,UACE,qBAAIT,UAAWC,IAAEa,KAAjB,UACE,sBAAMd,UAAWC,IAAEc,MAAnB,wBACA,sBAAMf,UAAWC,IAAEe,SAAnB,SAA8BP,EAAMQ,eAEtC,qBAAIjB,UAAWC,IAAEa,KAAjB,UACE,sBAAMd,UAAWC,IAAEc,MAAnB,oBACA,sBAAMf,UAAWC,IAAEe,SAAnB,SAA8BP,EAAMS,WAEtC,qBAAIlB,UAAWC,IAAEa,KAAjB,UACE,sBAAMd,UAAWC,IAAEc,MAAnB,oBACA,sBAAMf,UAAWC,IAAEe,SAAnB,SAA8BP,EAAMU,kB,wBCK/BC,MA3Bf,YAAuC,IAAjBC,EAAgB,EAAhBA,MAAOZ,EAAS,EAATA,MAC3B,OACE,0BAAST,UAAWC,IAAEqB,WAAtB,UACGD,GAAS,oBAAIrB,UAAWC,IAAEoB,MAAjB,SAAyBA,IAEnC,oBAAIrB,UAAWC,IAAEsB,KAAjB,SACGd,EAAMe,KAAI,SAAAC,GAAI,OACb,qBAAIzB,UAAWC,IAAEa,KAAjB,UACE,sBAAMd,UAAWC,IAAEc,MAAnB,SAA2BU,EAAKV,QAChC,sBAAMf,UAAWC,IAAEyB,WAAnB,SAAgCD,EAAKC,eAFXD,EAAKE,a,wBCY5BC,MAlBf,YAAiD,IAA3BpB,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,KAAMwB,EAAY,EAAZA,SAGlC,OACE,eAAC,WAAD,WACE,sBAAM7B,UAAW6B,EAAW5B,IAAE6B,OAAS7B,IAAE8B,QAAzC,SAAmDF,IACnD,qBAAK7B,UAAWC,IAAEO,OAAQI,IAAKJ,EAAQK,IAAK,YAAc,CAAER,QAAQ2B,MAAM,OAC1E,mBAAGhC,UAAWC,IAAEI,KAAhB,SAAuBA,Q,gBCad4B,MApBf,YAAkC,IAAZC,EAAW,EAAXA,QACpB,OACE,oBAAIlC,UAAWC,IAAEsB,KAAjB,SACGW,EAAQV,KAAI,SAAAW,GAAM,OACjB,oBAAInC,UAAWC,IAAEa,KAAjB,SACE,cAAC,EAAD,CAAYN,OAAQ2B,EAAO3B,OAAQH,KAAM8B,EAAO9B,KAAMwB,SAAUM,EAAON,YAD7CM,EAAOR,U,wBC8B5BS,MAnCf,YAAwC,IAAVC,EAAS,EAATA,MAC5B,OACE,kCACE,gCACE,+BACE,oBAAIrC,UAAWC,IAAEqC,OAAjB,kBACA,oBAAItC,UAAWC,IAAEqC,OAAjB,oBACA,oBAAItC,UAAWC,IAAEqC,OAAjB,2BAIJ,gCACGD,EAAMb,KAAI,SAAAV,GAAI,OACb,qBAAId,UAAWC,IAAEsC,QAAjB,UACE,oBAAIvC,UAAWC,IAAEuC,MAAjB,SAAyB1B,EAAK2B,OAC9B,oBAAIzC,UAAWC,IAAEuC,MAAjB,SAAyB1B,EAAK4B,SAC9B,oBAAI1C,UAAWC,IAAEuC,MAAjB,SAAyB1B,EAAK6B,aAHD7B,EAAKa,a,QCU/BiB,MAff,WACE,OACE,eAAC,EAAD,WACE,wCACA,cAACC,EAAD,CAAczC,OAAQ0C,IACtB,wCACA,cAAC,EAAD,CAAYzB,MAAM,eAAeZ,MAAOsC,IACxC,wCACA,cAAC,EAAD,CAAYb,QAASA,IACrB,wCACA,cAAC,EAAD,CAAoBG,MAAOW,QCTlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.41c30f8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"UserProfile_profile__25sIN\",\"description\":\"UserProfile_description__1e19n\",\"avatar\":\"UserProfile_avatar__mbiWR\",\"name\":\"UserProfile_name__-3_gm\",\"tag\":\"UserProfile_tag__2gEiX\",\"location\":\"UserProfile_location__1z3Wg\",\"stats\":\"UserProfile_stats__3p1Lv\",\"item\":\"UserProfile_item__2gwr3\",\"label\":\"UserProfile_label__2de_6\",\"quantity\":\"UserProfile_quantity__3WzPM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tTitle\":\"Transactions_tTitle__320de\",\"tItem\":\"Transactions_tItem__1_RHA\",\"tString\":\"Transactions_tString__1X7OF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__3o7J2\",\"title\":\"Statistics_title__oprZ4\",\"list\":\"Statistics_list__3GNqO\",\"item\":\"Statistics_item__3cmL3\",\"label\":\"Statistics_label__1rjLp\",\"percentage\":\"Statistics_percentage__HJWq0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"status\":\"FriendCard_status__HBc-A\",\"online\":\"FriendCard_online__2VLV7 FriendCard_status__HBc-A\",\"offline\":\"FriendCard_offline__3UAsD FriendCard_status__HBc-A\",\"avatar\":\"FriendCard_avatar__1HFIC\",\"name\":\"FriendCard_name__4in_9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendsList_list__24GFr\",\"item\":\"FriendsList_item__T7Zh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__L_wPE\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import PropTypes from 'prop-types';\nimport s from './UserProfile.module.css';\n\nfunction UsersProfile({ option }) {\n  const { name, tag, location, avatar, stats } = option;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers </span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views </span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes </span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nUsersProfile.propTypes = {\n  option: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    tag: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired,\n    stats: PropTypes.shape({\n      followers: PropTypes.number.isRequired,\n      views: PropTypes.number.isRequired,\n      likes: PropTypes.number.isRequired,\n    }),\n  }),\n};\n\nexport default UsersProfile;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.list}>\n        {stats.map(stat => (\n          <li className={s.item} key={stat.id}>\n            <span className={s.label}>{stat.label}</span>\n            <span className={s.percentage}>{stat.percentage}</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport React, { Fragment } from 'react';\nimport s from './FriendCard.module.css';\n\nfunction FriendCard({ avatar, name, isOnline }) {\n  //   const activeClass = isOnline ? s.online : s.offline;\n\n  return (\n    <Fragment>\n      <span className={isOnline ? s.online : s.offline}>{isOnline}</span>\n      <img className={s.avatar} src={avatar} alt={`avatar of` + { name }} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </Fragment>\n  );\n}\n\nFriendCard.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendCard;\n","import PropTypes from 'prop-types';\nimport FriendCard from './FriendCard';\nimport s from './FriendsList.module.css';\n\nfunction FriendList({ friends }) {\n  return (\n    <ul className={s.list}>\n      {friends.map(friend => (\n        <li className={s.item} key={friend.id}>\n          <FriendCard avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} />\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './Transactions.module.css';\n\nfunction TransactionHistory({ items }) {\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th className={s.tTitle}>Type</th>\n          <th className={s.tTitle}>Amount</th>\n          <th className={s.tTitle}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {items.map(item => (\n          <tr className={s.tString} key={item.id}>\n            <td className={s.tItem}>{item.type}</td>\n            <td className={s.tItem}>{item.amount}</td>\n            <td className={s.tItem}>{item.currency}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      currency: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default TransactionHistory;\n","import './App.css';\nimport Container from 'components/Container/Container';\nimport UsersProfile from 'components/UsersProfile/User';\nimport Users from 'components/UsersProfile/user.json';\nimport Statistics from 'components/Statistics/Statistical-data';\nimport statisticalData from 'components/Statistics/statistical-data.json';\nimport FriendList from 'components/FriendList/FriendList';\nimport friends from 'components/FriendList/friends.json';\nimport TransactionHistory from 'components/TransactionHistory/TransactionHistory';\nimport transactions from 'components/TransactionHistory/transactions.json';\n\nfunction App() {\n  return (\n    <Container>\n      <h2>Task 1</h2>\n      <UsersProfile option={Users} />\n      <h2>Task 2</h2>\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <h2>Task 3</h2>\n      <FriendList friends={friends} />\n      <h2>Task 4</h2>\n      <TransactionHistory items={transactions} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}